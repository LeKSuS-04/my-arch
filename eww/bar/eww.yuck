;; =================
;; ;; Bar widgets ;;
;; =================

;; Template for icon widget
(defwidget icon-widget [?class ?width onclick data]
    (eventbox :class { class ?: "icon-widget" }
        :cursor "pointer"
        :onclick onclick
        :width { width ?: 40 }
        { data ?: "?" }))


;; Widgets for left side of bar
;; Drun widget
(defwidget drun-widget []
    (icon-widget :class "drun-widget"
        :width 50
        ;; I don't know why, but if no input was piped to rofi,
        ;; it would close right away. So I'm piping dummy output
        ;; to make it work
        :onclick "echo | rofi -show drun" 
        :data ""))     ; nf-linux-archlinux      


;; Workspace widget
(deflisten workspaces-json
    :initial "[]"
    "~/.config/eww/bar/scripts/workspaces.sh")
(defwidget workspaces []
    (box :space-evenly false
        (for workspace in workspaces-json
            (label :class { workspace["is_focused"] ? "workspace-focused" : "workspace" }
                :width 28
                :yalign 0.4
                :text { workspace["is_focused"] ? "柳" :            ; nf-mdi-square_inc
                            workspace["is_active"] ? "" :         ; nf-fa-square
                                                        "" }))))  ; nf-mdi-crop_square


;; Only widget on central part of bar:
;; Time
(defpoll current-time
    :interval "1s"
    :initial "CURRENT DATE"
    "date +\"%d %b %H:%M\"")
(defwidget time-widget []
    (eventbox :class "time-widget"
        :cursor "pointer"
        :width 150
        current-time))


;; Icons and widgets for right side of bar

;; Keyboard layout
(deflisten current-kb-layout 
    :initial "us(qwerty)"
    "xkb-switch -W")
(defwidget keyboard-layout []
    (icon-widget :class "text-widget"
        :onclick "~/.config/eww/bar/scripts/next_kb_layout.sh"
        :data { captures(current-kb-layout, ".{2}")[0][0] })) ;; First two letters of layout

;; JSON with system data
(deflisten sys-data
    :initial "{}"
    ;; Actually, it's not run every 0.1 seconds
    ;; For some reason sleep it's VEEEERY delayed
    ;; when run by eww (???)
    "~/.config/eww/bar/scripts/fetch_sys_data.py -t 0.1")

;; Other icons
(defwidget network-widget []
    (icon-widget :onclick "echo 'TODO'"
        :data { sys-data["network"]["icon"] }))

(defwidget brightness-widget []
    (icon-widget
        :onclick "echo 'TODO'"
        :data { sys-data["brightness"]["icon"] }))

(defwidget volume-widget []
    (icon-widget
        :onclick "echo 'TODO'"
        :data { sys-data["volume"]["icon"] }))

(defwidget battery-widget []
    (icon-widget
        :onclick "~/.config/eww/scripts/eww_toggle.sh battery-menu"
        :data { sys-data["battery"]["icon"] }))

(defwidget battery-menu-widget []
    (box :class "battery-menu"
        :orientation "v"
        :space-evenly false

        (overlay
            (circular-progress 
                :height 180
                :class "battery-bar"
                :value { sys-data["battery"]["value"]["capacity"] }
                :thickness 18
                :start-at 25.0
                :clockwise true)
            (label
                :class "battery-value"
                :text { sys-data["battery"]["value"]["capacity"] + "%" }))

        (label 
            :class "battery-status"
            :text { sys-data["battery"]["value"]["status"] == "Unknown"
                        ? "Full"
                        : sys-data["battery"]["value"]["status"] })

        (label
            :class "battery-status"
            :text { sys-data["battery"]["time_left"] + " left" })))

(defwindow battery-menu
    :monitor 0
    :geometry (geometry :x -24
                        :y 66
                        :width "200px"
                        :height "260px"
                        :anchor "top right")
    :stacking "fg"
    :windowtype "dock"
    :wm-ignore false
    
    (battery-menu-widget))
    
(defwidget power-button []
    (icon-widget :class "power-button"
        :onclick "~/.config/eww/scripts/eww_toggle.sh power-menu"
        :data "")) ; nf-fa-power_off

(defwidget power-menu-buttons []
    (box :class "power-menu"
        :orientation "v"
        (eventbox
            :cursor "pointer"
            :class "power-menu-button top"
            :onclick "loginctl terminate-user \"$(whoami)\""
            "")        ; nf-mdi-logout
        (eventbox 
            :cursor "pointer"
            :class "power-menu-button"
            :onclick "reboot"
            "")        ; nf-fa-repeat
        (eventbox 
            :cursor "pointer"
            :class "power-menu-button bottom"
            :onclick "shutdown now"
            "")))      ; nf-fa-power_off

(defwindow power-menu
    :monitor 0
    :geometry (geometry :x -24
                        :y 66
                        :width "60px"
                        :height "180px"
                        :anchor "top right")
    :stacking "fg"
    :windowtype "dock"
    :wm-ignore false
    
    (power-menu-buttons))

;; =====================================
;; ;; Putting widgets together in bar ;;
;; =====================================

;; Three parts of bar: left, middle and right
(defwidget bar-left []
    (box :halign "start"
        :space-evenly false

        (drun-widget)
        (workspaces)))

(defwidget bar-middle []
    (box :halign "center"
        :space-evenly false
        :halign "center"

        (time-widget)))

(defwidget bar-right []
    (box :halign "end"
        :space-evenly false

        (keyboard-layout)
        (brightness-widget)
        (volume-widget)
        (network-widget)    
        (battery-widget)
        (power-button)))

;; Full bar widget
(defwidget bar-widget []
    (centerbox :class "bar"
        :orientation "horizontal"
        (bar-left)
        (bar-middle)
        (bar-right)))

;; Window that holds bar widget
(defwindow bar
    :monitor 0
    :geometry (geometry :x "0" 
                        :y "12px"
                        :width "1872px"
                        :height "42px"
                        :anchor "top center")
    :stacking "fg"
    :reserve (struts :distance "66px"
                        :side "top")
    :windowtype "dock"
    :wm-ignore false
    
    (bar-widget))
